{
  "text": "\nHere is the overall task:\n\nAn HTML5 page that queries a location for an index of JSON files which will be used to create a list of links. \nAny file called \"latest-pr.json\" should use a \"link\" field for a link to the latest deployed PR, and a \"title\" field for the title of the PR.\nAny file that starts with \"review-\" should use the \"link\" and \"title\" fields to be added to a list of e2e test reviews links.\nIf there are no PR or review files, the page should display a message saying there are no files of that type.\n\n\nHere is your current task: \n\nYou will use the Haibun testing system, which is like BDD, for e2e/integration testing, usually via the browser.\nThese Haibun scenario phrases are available:\n``` javascript\n\"press {key}\", \"type {text}\", \"input {what} for {field}\", \"select {option} for {field: webcontrol}\", \"dialog {what} {type} says {value}\", \"dialog {what} {type} not set\", \"in {selector}, see {text}\", \"see {text}\", \"wait for {what}\", \"on a new tab\", \"on tab {tab}\", \"be on the {name} page\", \"open extension popup for tab {tab}\", \"cookie {name} is {value}\", \"URI includes {what}\", \"URI query parameter {what} is {value}\", \"URI starts with {start}\", \"URI matches {what}\", \"click by alt text {altText}\", \"click by test id {testId}\", \"click by placeholder {placeholder}\", \"click by role {roleStr}\", \"click by label {label}\", \"click by title {title}\", \"click by text {text}\", \"click on (?<name>.[^s]+)\", \"click the checkbox (?<name>.+)\", \"click `(?<id>.+)`\", \"click \"(?<name>.+)\"\", \"click( with alt)? the link {name}\", \"click the button (?<id>.+)\", \"On the {name} webpage\", \"reload page\", \"go back\", \"press the back button\", \"using {browser} browser\", \"upload file {file} using {selector}\", \"save download to {file}\", \"with frame {name}\", \"Accept next dialog to {where}\", \"take a screenshot\", \"{what} is expanded with the {using}\", \"save URI query parameter {what} to {where}\", \"concat {p1} and {p2} as {what}\", \"show env\", \"show vars\", \"set( empty)? {what: string} to {value: string}\", \"{what: string} is \"{value}\"\", \"{what: string} is set( or .*)?\", \"/^Background: ?(?<background>.+)?$/\", \"/^Feature: ?(?<feature>.+)?$/\", \"/^Scenario: (?<scenario>.+)$/\", \"display {what}\", \"page is accessible accepting serious {serious} and moderate {moderate}\", \"page at {uri} is accessible accepting serious {serious} and moderate {moderate}\";\n```\nPlaceholders, like this {placeholder} appear, in the scenario phrases.  The phrases you write must use an applicable word instead of the one in the placeholder.\nWrite Haibun scenario phrases for every page of the main task, include accessibility tests after every browser action such as selecting, typing, and navigating.\nFor every placeholder, add a Set phrase, like this: `Set {placeholder} to \"value\"` in a separate placeholders file in the JSON results.\nIf a placeholder refers to an HTML element, use a Haibun identifier in the `data-testid` attribute to identify them, starting the id with \"_hai-\", like this: `<input data-testid=\"_hai-username\" />`.\n\n\nCarefully use all the details from the above responses in your answer for the current task.\n\nYour complete response must be less than 65000 characters long.\n\n",
  "key": "haibun-tests"
}