{
  "summary": "Create an HTML5 page with TypeScript libraries for data access and service requests, using Frameworkless Web Components and ARIA attributes for accessibility.",
  "suggestions": "None",
  "results": [
    {
      "filename": "package.json",
      "content": "{\n  \"name\": \"prairie-json-explorer\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"start\": \"tsc && node server.js\"\n  },\n  \"dependencies\": {\n    \"typescript\": \"^4.5.4\",\n    \"express\": \"^4.17.3\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.13\"\n  }\n}",
      "folder": "."
    },
    {
      "filename": "server.js",
      "content": "const express = require('express');\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.static('public'));\n\napp.listen(port, () => {\n  console.log(`Server listening on port ${port}`);\n});",
      "folder": "."
    },
    {
      "filename": "tsconfig.json",
      "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"commonjs\",\n    \"outDir\": \"./built\",\n    \"strict\": true,\n    \"esModuleInterop\": true\n  },\n  \"include\": [\"src/**/*.ts\"]\n}",
      "folder": "."
    },
    {
      "filename": "index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Prairie JSON Explorer</title>\n  <link rel=\"stylesheet\" href=\"main.css\">\n</head>\n<body>\n  <prairie-json-explorer></prairie-json-explorer>\n  <script src=\"built/bundle.js\"></script>\n</body>\n</html>",
      "folder": "public"
    },
    {
      "filename": "main.css",
      "content": "body {\n  font-family: Arial, sans-serif;\n}\n\n.list-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.list-item {\n  margin: 5px;\n}",
      "folder": "public"
    },
    {
      "filename": "prairie-json-explorer.ts",
      "content": "import { DataAccess } from './lib/data-access';\n\nexport class PrairieJsonExplorer extends HTMLElement {\n  private dataAccess: DataAccess;\n\n  constructor() {\n    super();\n    this.dataAccess = new DataAccess();\n  }\n\n  async connectedCallback() {\n    const prData = await this.dataAccess.getLatestPR();\n    const reviewData = await this.dataAccess.getReviewData();\n\n    this.render(prData, reviewData);\n  }\n\n  render(prData: { link: string; title: string; }, reviewData: { link: string; title: string; }[]) {\n    const prLink = prData ? `<a href=\"${prData.link}\" data-testid=\"_hai-latest-pr\">${prData.title}</a>` : 'No latest PR found.';\n    const reviewLinks = reviewData.length > 0 ? reviewData.map(review => `<a href=\"${review.link}\" data-testid=\"_hai-review-${review.title}\">${review.title}</a>`).join('<br>') : 'No review files found.';\n\n    this.innerHTML = `\n      <div class=\"list-container\">\n        <h2>Latest PR</h2>\n        <div class=\"list-item\">${prLink}</div>\n        <h2>Review Files</h2>\n        <div class=\"list-item\">${reviewLinks}</div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('prairie-json-explorer', PrairieJsonExplorer);",
      "folder": "src"
    },
    {
      "filename": "data-access.ts",
      "content": "export class DataAccess {\n  private apiUrl = '/api';\n\n  async getLatestPR(): Promise<{ link: string; title: string; } | null> {\n    const response = await fetch(`${this.apiUrl}/latest-pr`);\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n    return null;\n  }\n\n  async getReviewData(): Promise<{ link: string; title: string; }[]> {\n    const response = await fetch(`${this.apiUrl}/review-data`);\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n    return [];\n  }\n}",
      "folder": "src/lib"
    },
    {
      "filename": "bundle.ts",
      "content": "import './prairie-json-explorer';",
      "folder": "src"
    }
  ]
}